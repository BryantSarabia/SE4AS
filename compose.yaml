version: "3.8"
name: se4as
services:

  # field-simulator:
  #   build: ./field-simulator
  #   container_name: FIELD_SIMULATOR
  #   restart: always
  #   volumes:
  #     - ./field-simulator/combined.log:/app/combined.log
  #     - ./field-simulator/error.log:/app/error.log
  #   environment:
  #     - BROKER_URL=mosquitto:1883
  #     - DEBUG=true
  #   networks:
  #     - iot
  #   depends_on:
  #     - mosquitto
  grafana:
    build: ./grafana
    container_name: GRAFANA
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning:/etc/grafana/provisioning
    env_file:
      - ./grafana/.env
      - ./knowledge/.env
    networks:
      - iot
    depends_on:
      - influxdb
  backend:
    build: ./backend
    container_name: BACKEND
    restart: always
    env_file:
      - ./mosquitto/.env
      - ./backend/.env
      - ./mongodb/.env
    networks:
      - iot
    depends_on:
      - mosquitto
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      start_period: 10s
      interval: 30s
      timeout: 10s
      retries: 3
  mongodb:
    build: ./mongodb
    container_name: MONGODB
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./mongodb/data:/data/db
    networks:
      - iot
  mosquitto:
    image: eclipse-mosquitto:2.0.20
    container_name: MOSQUITTO
    restart: always
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - iot
  telegraf:
    image: telegraf:1.33-alpine
    container_name: MONITOR
    restart: always
    volumes:
      - ./monitor/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    env_file:
      - ./knowledge/.env
      - ./monitor/.env
    networks:
      - iot
    depends_on:
      - mosquitto
      - influxdb
  influxdb:
    image: influxdb:2.7-alpine
    container_name: KNOWLEDGE
    restart: always
    ports:
      - 8086:8086
    volumes:
      - ./knowledge:/var/lib/influxdb2
      - ./knowledge/config:/etc/influxdb2
    env_file:
      - ./knowledge/.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 1m
      timeout: 10s
      retries: 3
    networks:
      - iot
  analyzer:
    build: ./analyzer 
    container_name: ANALYZER
    restart: always
    env_file:
      - ./mosquitto/.env
      - ./backend/.env
      - ./analyzer/.env
    networks:
      - iot
    depends_on:
      mosquitto:
          condition: service_started
      backend:
          condition: service_healthy
  planner:
    build: ./planner
    container_name: PLANNER
    restart: always
    env_file:
      - ./mosquitto/.env
    networks:
      - iot
    depends_on:
      - mosquitto
  executor:
    build: ./executor
    container_name: EXECUTOR
    restart: always
    env_file:
      - ./mosquitto/.env
    networks:
      - iot
    depends_on:
      - mosquitto
  initializer:
    build: ./initializer
    container_name: INITIALIZER
    restart: no
    env_file:
      - ./mosquitto/.env
      - ./backend/.env
    networks:
      - iot
    depends_on:
      backend:
        condition: service_healthy
  sensor-simulator:
    build: ./sensor-simulator
    container_name: SENSOR_SIMULATOR
    restart: always
    env_file:
      - ./mosquitto/.env
      - ./backend/.env
    networks:
      - iot
    depends_on:
      mosquitto:
        condition: service_started
      backend:
        condition: service_healthy
networks:
  iot:
