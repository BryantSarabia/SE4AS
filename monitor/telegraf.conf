[agent]
  omit_hostname = true

[[outputs.influxdb_v2]]
  urls = ["${INFLUX_URL}"]
  token = "${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}"
  organization = "${DOCKER_INFLUXDB_INIT_ORG}"
  bucket = "${DOCKER_INFLUXDB_INIT_BUCKET}"

[[outputs.file]]
  files = ["stdout", "/tmp/metrics.out"]

# [[outputs.mqtt]]
# servers = ["${MQTT_HOST}"]
# topic = 'monitor/field/{{ .Tag "field" }}/soil_moisture_threshold/{{ .Tag "sensor" }}'
# data_format = "json"
# # Optional: QoS level (0, 1, or 2)
# qos = 0
# # Optional: Retain messages
# retain = false

[[inputs.mqtt_consumer]]
  servers = ["${MQTT_HOST}"]
  topics = [
    "zone/+/field/+/sensor/+/+" # /zone/:zoneId/field/:fieldId/sensor/:sensorId/:sensorType
  ]
  client_id = "telegraf"
  data_format = "json"
  json_string_fields  = ["value"]
  
  [[inputs.mqtt_consumer.topic_parsing]]
    topic = "zone/+/field/+/sensor/+/+" # /zone/:zoneId/field/:fieldId/sensor/:sensorId/:sensorType
    measurement = "measurement/_/_/_/_/_/_"
    tags = "_/zone_id/_/field_id/_/_/sensor_type"

# [[inputs.mqtt_consumer]]
#   servers = ["${MQTT_HOST}"]
#   topics = [
#     "zone/+/field/+/actuator/+/+" # /zone/:zoneId/field/:fieldId/actuator/:actuatorId/:actuatorType
#   ]
#   client_id = "telegraf"
#   data_format = "json"
#   json_string_fields  = ["value"]
#   tag_keys = ["measurement"]
  
#   [[inputs.mqtt_consumer.topic_parsing]]
#     topic = "zone/+/field/+/actuator/+/+" # /zone/:zoneId/field/:fieldId/actuator/:actuatorId/:actuatorType
#     measurement = "measurement/_/_/_/_/_/_"
#     tags = "_/zone_id/_/field_id/_/_/actuator_type"